package org.techtown.martapp2;

import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.os.Vibrator;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.bumptech.glide.request.target.GlideDrawableImageViewTarget;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import com.sdsmdg.tastytoast.TastyToast;
import com.squareup.picasso.Picasso;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.List;

import uk.co.senab.photoview.PhotoView;
import uk.co.senab.photoview.PhotoViewAttacher;

public class MapActivity extends AppCompatActivity {

    private FirebaseDatabase firebaseDatabase=FirebaseDatabase.getInstance();
    private DatabaseReference databaseReference=firebaseDatabase.getReference();
    private DatabaseReference androidDatabase=firebaseDatabase.getReference();
    private DatabaseReference databasepriceData=firebaseDatabase.getReference();    //barcode testing database
    private DatabaseReference paymentdata=firebaseDatabase.getReference("payment");
    private DatabaseReference barcodedata=firebaseDatabase.getReference("barcode");
    private DatabaseReference iot_check=firebaseDatabase.getReference();
    EditText editText;
    Button button;
    Button barcode;
    String msg;
    String pl;
    //String location;
    String location2="gif/gg.gif";
    String adv_image;
    String zero="gg";
    String msg2;
    String prot;
    String iot_msg1;
    String abc;

    FirebaseStorage firebaseStorage=FirebaseStorage.getInstance();
    StorageReference storageReference=firebaseStorage.getReferenceFromUrl("gs://martserver-8746a.appspot.com");
    StorageReference ref;       //map
    StorageReference adv;       //adv

    StorageReference gif;

    PhotoView imageView;
    PhotoView ad_image;

    Vibrator vibrator;

    productData proDatas;
    iotData iotdatas;

    ArrayList<String> iot_string, product_string;
    ArrayList<String> key;

    ArrayList<String> list;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.map_activity);
        getSupportActionBar().setTitle("지도");

        SharedPreferences pref2=getSharedPreferences("pref2",MODE_PRIVATE);
        zero=pref2.getString("key2","");

        final SharedPreferences pref=getSharedPreferences("pref",MODE_PRIVATE);
        location2=pref.getString("key1","gif/gg.gif");

        editText=(EditText)findViewById(R.id.editText);
        button=(Button)findViewById(R.id.choicemap);
        barcode=(Button)findViewById(R.id.barcodebutton);
        imageView=(PhotoView)findViewById(R.id.map_imageView);
        vibrator=(Vibrator)getSystemService(Context.VIBRATOR_SERVICE);

        //iot 수량 파악을 위한 배열 선언
        iot_string=new ArrayList<String>();
        product_string=new ArrayList<String>();
        key=new ArrayList<String>();

        list=new ArrayList<String>();

        androidDatabase=firebaseDatabase.getReference("voice");
        androidDatabase.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                for(DataSnapshot messageData:dataSnapshot.getChildren()){
                    msg=messageData.getValue().toString();
                    editText.setText(msg);
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        getproducename();   //상품 정보 읽어들이기

        //location="map/"+zero+".png";
        gifstorage();


        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                vibrator.vibrate(40);
                loadingToast();
                searching();
                androidDatabase.child("voice").setValue("");
                editText.getText().clear();
            }
        });

        //바코드 스캔하는 것
        barcode.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                vibrator.vibrate(40);
                barcodedata.child("barcode").setValue("s");
                Toast toast0=TastyToast.makeText(getApplication(),"바코드를 스캔합니다.",TastyToast.LENGTH_LONG,TastyToast.INFO);
                toast0.setGravity(Gravity.TOP,0,200);
            }
        });



        //광고 데이터 받기
        databaseReference=firebaseDatabase.getReference("advertise");
        databaseReference.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                for(DataSnapshot messageData:dataSnapshot.getChildren()){
                    msg2=messageData.getValue().toString();
                    if(msg2.equals("a")){    prot="A";   showDialog();}
                    if(msg2.equals("b")){    prot="B";   showDialog();}
                    if(msg2.equals("c")){    prot="C";   showDialog();}
                    if(msg2.equals("d")){    prot="D";   showDialog();}
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        //databaseReference.child("advertise").setValue("1");

       // startData.child("start").setValue("ON");



        Button button0=(Button)findViewById(R.id.button0);      //시리얼
        button0.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_A.gif";
                loadingToast();
                gifstorage();
                zero="aa";
                Toast toast=TastyToast.makeText(getApplicationContext(),"시리얼은 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");

            }
        });

        Button button1=(Button)findViewById(R.id.button1);      //비스킷
        button1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_A.gif";
                loadingToast();
                gifstorage();
                zero="aa";
                Toast toast=TastyToast.makeText(getApplicationContext(),"비스킷은 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");
            }
        });
        Button button2=(Button)findViewById(R.id.button2);      //스낵
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_A.gif";
                loadingToast();
                gifstorage();
                zero="aa";
                Toast toast=TastyToast.makeText(getApplicationContext(),"스낵은 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");
            }
        });
        Button button3=(Button)findViewById(R.id.button3);      //우유
        button3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_B.gif";
                loadingToast();
                gifstorage();
                zero="bb";
                Toast toast=TastyToast.makeText(getApplicationContext(),"우유는 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");
            }
        });
        Button button4=(Button)findViewById(R.id.button4);      //초코우유
        button4.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_B.gif";
                loadingToast();
                gifstorage();
                zero="bb";
                Toast toast=TastyToast.makeText(getApplicationContext(),"초코우유는 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");
            }
        });
        Button button5=(Button)findViewById(R.id.button5);      //돼지고기
        button5.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_C.gif";
                loadingToast();
                gifstorage();
                zero="cc";
                Toast toast=TastyToast.makeText(getApplicationContext(),"돼지고기는 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");
            }
        });
        Button button6=(Button)findViewById(R.id.button6);      //닭고기 였지만 사이다로 바뀐거
        button6.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_C.gif";
                loadingToast();
                gifstorage();
                zero="cc";
                Toast toast=TastyToast.makeText(getApplicationContext(),"사이다는 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");
            }
        });
        Button button7=(Button)findViewById(R.id.button7);      //채소
        button7.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                location2="gif/"+zero+"_D.gif";
                loadingToast();
                gifstorage();
                zero="dd";
                Toast toast=TastyToast.makeText(getApplicationContext(),"쌈채소는 여기에 있어요!",TastyToast.LENGTH_LONG,TastyToast.SUCCESS);
                toast.setGravity(Gravity.TOP,0,200);
                paymentdata.child("statue").setValue("m");
            }
        });


    }


    //editText 값을 읽어서 firebase storage 이미지 보내주기
    private void searching(){
        pl=editText.getText().toString();
        if(pl.equals("1")){
            location2="gif/gg.gif";
            gifstorage();
            zero="gg";
        }
        else if(pl.equals("시리얼")||pl.equals("비스킷")||pl.equals("스낵")||pl.equals("과자")||pl.equals("콘푸로스트")){
            location2="gif/"+zero+"_A.gif";
            gifstorage();
            zero="aa";
        }
        else if(pl.equals("우유")||pl.equals("초코우유")||pl.equals("유제품")||pl.equals("서울우유")){
            location2="gif/"+zero+"_B.gif";
            gifstorage();
            zero="bb";
        }
        else if(pl.equals("돼지고기")||pl.equals("사이다")||pl.equals("고기")){
            location2="gif/"+zero+"_C.gif";
            gifstorage();
            zero="cc";
        }
        else if(pl.equals("쌈채소")||pl.equals("채소")){
            location2="gif/"+zero+"_D.gif";
            gifstorage();
            zero="dd";
        }
        else if(pl.equals("g")){
            location2="gif/gg_A.gif";
            gifstorage();
        }else{
            Toast toast1=TastyToast.makeText(getApplication(),"상품을 찾을 수 없습니다. 상품명을 다시 입력해주세요.",TastyToast.LENGTH_LONG,TastyToast.ERROR);
            toast1.setGravity(Gravity.TOP,0,200);
        }

    }

    /*지도 이미지 가져오는 메소드
    private void storage(){
        gif = storageReference.child(location);
        gif.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
            @Override
            public void onSuccess(Uri uri) {
                String url = uri.toString();
                PhotoViewAttacher photoView = new PhotoViewAttacher(imageView);
                photoView.update();
                Picasso.with(getApplication()).load(url).into(imageView);
            }
        });
    }*/

    //지도 gif 가져오는 메소드
    private void gifstorage(){
        ref=storageReference.child(location2);
        ref.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
            @Override
            public void onSuccess(Uri uri) {
                String url=uri.toString();
                GlideDrawableImageViewTarget gifImage=new GlideDrawableImageViewTarget(imageView);
                Glide.with(MapActivity.this).load(url).into(gifImage);
            }
        });
    }

    //광고 이미지 가져오는 메소드
    private void advertisement(){
        adv=storageReference.child(adv_image);
        adv.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
            @Override
            public void onSuccess(Uri uri) {
                String url=uri.toString();
                PhotoViewAttacher photoView=new PhotoViewAttacher(ad_image);
                photoView.update();
                Picasso.with(getApplication()).load(url).into(ad_image);
            }
        });
    }

    //광고 알림창 띄우기
    private void showDialog(){

        Context context=MapActivity.this;

        if((context!=null)&&(!((MapActivity) context).isFinishing())) {

            final Dialog dialog = new Dialog(context);
            dialog.requestWindowFeature(getWindow().FEATURE_NO_TITLE);
            dialog.setContentView(R.layout.advertisement_dialog);

            ad_image = dialog.findViewById(R.id.advertise_image);
            adv_image = "adv/ad.jpg";
            advertisement();        //광고 이미지 가져오기

            //text.setText(prot);

            Button positiveButton = dialog.findViewById(R.id.good_button);
            positiveButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    //editText.setText(prot);
                    location2="gif/"+zero+"_"+prot+".gif";

                    gifstorage();

                    if(prot.equals("A"))    zero="aa";
                    else if(prot.equals("B"))   zero="bb";
                    else if(prot.equals("C"))   zero="cc";
                    else if(prot.equals("D"))   zero="dd";

                    loadingToast();
                    databaseReference.child("advertise").setValue("");
                    paymentdata.child("statue").setValue("m");
                    imageDelete();
                    dialog.dismiss();
                }
            });
            Button negativeButton = dialog.findViewById(R.id.bad_button);
            negativeButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    databaseReference.child("advertise").setValue("");
                    imageDelete();
                    dialog.dismiss();
                }
            });
            dialog.show();

        }

    }

    //광고 이미지 삭제
    private void imageDelete(){
        StorageReference storageRef=firebaseStorage.getReference();
        StorageReference desertRef=storageRef.child("adv/ad.jpg");
        desertRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {
            @Override
            public void onSuccess(Void aVoid) {
                //Toast.makeText(getApplicationContext(), "delete file", Toast.LENGTH_SHORT).show();
            }
        }).addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(@NonNull Exception e) {
                //Toast.makeText(getApplicationContext(), "delete", Toast.LENGTH_SHORT).show();
            }
        });
    }

    //기다리는 중 토스트 메시지
    private void loadingToast(){
        Toast toast =TastyToast.makeText(getApplication(),"검색하는 중...",TastyToast.LENGTH_LONG,TastyToast.WARNING);
        toast.setGravity(Gravity.TOP,0,200);
    }


    //상품 인식 받아오기
    public void getproducename(){
        getproducecount();
        databasepriceData.child("name").addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                for(DataSnapshot messageData:dataSnapshot.getChildren()) {
                    proDatas = messageData.getValue(productData.class);

                    list.add(String.valueOf(proDatas.getProductName()));
                    if(list !=null && !list.isEmpty()){
                        int k=list.size();
                        int y=k-1;
                        abc= list.get(y);    //마지막 배열 값만 프린트 하고 싶은데 실행오류 남;;
                    }

                    //Toast toast = TastyToast.makeText(getApplication(), abc + " 상품이 담겼습니다.", TastyToast.LENGTH_SHORT, TastyToast.SUCCESS);
                    //toast.setGravity(Gravity.TOP, 0, 400);


                    product_string.add(proDatas.getProductName());  //상품명을 배열에 저장


                    if (iot_msg1.equals("on")) {
                        if (iot_string.contains(proDatas.getProductName()) == true) {
                            int x=getItemPos(proDatas.getProductName());
                            Toast to = TastyToast.makeText(getApplication(), proDatas.getProductName()+"은(는) " + iotdatas.getcheck() + "개 보유하고 있습니다.", TastyToast.LENGTH_LONG, TastyToast.SUCCESS);
                            to.setGravity(Gravity.TOP, 0, 400);
                        }else{
                            Toast to = TastyToast.makeText(getApplication(), proDatas.getProductName()+"은(는) 0개 보유하고 있습니다.", TastyToast.LENGTH_LONG, TastyToast.SUCCESS);
                            to.setGravity(Gravity.TOP, 0, 400);
                        }
                        /*int x=getItemPos(proDatas.getProductName());
                        Toast to = TastyToast.makeText(getApplication(), "해당 상품은 " + key.get(x) + "개 보유하고 있습니다.", TastyToast.LENGTH_LONG, TastyToast.SUCCESS);
                        to.setGravity(Gravity.TOP, 0, 400);     */
                    }
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
    }

    //상품 수량 명 및 개수 받아오기
    public void getproducecount(){
        databasepriceData.child("iot").addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                //key.clear();
                for(DataSnapshot message:dataSnapshot.getChildren()){
                    iotdatas=message.getValue(iotData.class);

                    iot_string.add(iotdatas.getname());
                    key.add(iotdatas.getcheck());
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        //스위치 on/off 판별
        iot_check.child("iotcheck").addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                for(DataSnapshot msg:dataSnapshot.getChildren()){
                    iot_msg1=msg.getValue().toString();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
    }

    //수량 체크 인덱스
    private int getItemPos(String item){
        for(int i=0; i<=iot_string.size(); i++){
            if(iot_string.get(i).equals(item)){
                return i;
            }
        }
        return -1;
    }


    @Override
    protected void onStop() {
        super.onStop();
        //databaseReference.child("advertise").setValue("0");
        //startData.child("start").setValue("OFF");
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();

        //지도 이미지 기억하기
        SharedPreferences pref = getSharedPreferences("pref", MODE_PRIVATE);
        SharedPreferences.Editor editor = pref.edit();
        editor.putString("key1", location2);
        editor.commit();

        SharedPreferences pref2=getSharedPreferences("pref2",MODE_PRIVATE);
        SharedPreferences.Editor editor1=pref2.edit();
        editor1.putString("key2",zero);
        editor1.commit();
    }

    //메뉴 생성
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        super.onCreateOptionsMenu(menu);
        MenuInflater mi=getMenuInflater();
        mi.inflate(R.menu.menu_activity,menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()){
            case R.id.item_1:
                Intent intent=new Intent(getApplication(),menuActivity.class);
                startActivity(intent);
                return true;
        }
        return false;
    }
}
